{"version":3,"sources":["components/token-stats/token-stats.module.scss","components/app/App.module.scss","components/token-bar/token-bar.module.scss","models/time-range.ts","services/constants.tsx","components/chart/timeSeriesChart.ts","utils/index.ts","components/token-stats/token-stats.tsx","components/chart/chart.tsx","components/token-bar/token-bar.tsx","state/app/selectors.ts","services/data.ts","state/app/actions.ts","components/time-range/time-range.tsx","components/price-change/price-change.tsx","components/token-price/token-price.tsx","components/app/App.tsx","models/app-status.ts","models/metrics.ts","state/app/index.ts","state/store.ts","index.tsx","components/chart/chart.module.scss","components/token-price/token-price.module.scss","components/price-change/price-change.module.scss","components/time-range/time-range.module.scss"],"names":["module","exports","TimeInterval","TOKENS","symbol","name","iconId","DELTA_COLORS","map","d","TRANSITION_DURATION","getExtents","data","yPadding","paddedYExtent","d3","close","i","timeStamps","Date","timestamp","yExtent","xExtent","TimeRanges","month","value","metric","id","week","day","StatType","displayPrice","val","rounded","Math","round","toLocaleString","Chart","svgRef","useRef","timeSeriesChart","useEffect","current","svgEl","svg","linearGradient","append","attr","yScale","range","xScale","line","classed","lineGen","x","y","gradPoly","domain","datum","transition","duration","delay","path","TimeSeriesChart","undefined","className","styles","ref","viewBox","priceRange","length","price","Option","Select","TokenBar","onTokenSelect","token","tokenSelector","onChange","t","find","dropdownClassName","selectDropdown","selectOption","tokenSymbol","src","alt","selectTimeSeries","state","app","timeSeries","selectMetrics","metrics","selectTime","createSelector","timeRange","timeInterval","interval","baseHeaders","process","TIME_SERIES_URL","start","end","METRICS_URL","fetchMetrics","a","fetch","method","headers","res","json","extractMetrics","fetchTimeSeries","moment","subtract","valueOf","numbersToObjects","zipValues","parameters","columns","values","reduce","obj","index","rawMetrics","market_data","price_usd","priceATH","all_time_high","pricePeriodOpen","marketCapRank","marketcap","rank","marketCap","current_marketcap_usd","circulatingSupply","supply","circulating","DataService","fetchTokenData","createAsyncThunk","Promise","all","setTime","createAction","TokenStats","renderStat","type","RANK","CURRENCY","format","replace","SUPPLY","floor","title","stats","statContainer","label","stat","TimeRangeSelect","rangeSelected","selectRange","isSelected","selected","TimeRange","onClick","PriceChange","diff","diffAbs","abs","diffPercent","percent","renderChange","pChange","changeTime","renderTimeFrame","TokenPrice","cx","visible","pValue","App","AppStatus","dispatch","useDispatch","timeSeriesData","useSelector","time","useState","setToken","updateDeltaColor","useCallback","deltaColor","setTimeout","document","documentElement","style","setProperty","header","contentContainer","leftContainer","content","priceTime","DAY","HOUR","MINUTES","rangeToInterval","rightContainer","initialState","status","INIT","appReducer","createReducer","addCase","pending","fulfilled","payload","open","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById","console","log"],"mappings":"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","file":"static/js/main.2f66b56c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TokenStats\":\"token-stats_TokenStats__1gr22\",\"title\":\"token-stats_title__3Ala3\",\"stats\":\"token-stats_stats__KpYoh\",\"statContainer\":\"token-stats_statContainer__3hCVf\",\"label\":\"token-stats_label__EEZA0\",\"stat\":\"token-stats_stat__WPotP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1E3x_\",\"header\":\"App_header__3FcCA\",\"contentContainer\":\"App_contentContainer__3XcgS\",\"leftContainer\":\"App_leftContainer__2IS9M\",\"content\":\"App_content__1Dzqr\",\"rightContainer\":\"App_rightContainer__3tQMO\",\"priceTime\":\"App_priceTime__2w9FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TokenBar\":\"token-bar_TokenBar__11EsS\",\"token\":\"token-bar_token__3pBRP\",\"symbol\":\"token-bar_symbol__1WZJK\",\"selectDropdown\":\"token-bar_selectDropdown__TYWVb\"};","export interface TimeRange {\n  id: number;\n  value: number;\n  metric: 'month' | 'week' | 'hours';\n}\n\nexport const TimeRanges: {\n  [index: string]: TimeRange;\n  month: TimeRange;\n  week: TimeRange;\n  day: TimeRange;\n} = {\n  month: {\n    value: 1,\n    metric: 'month',\n    id: 0,\n  },\n  week: {\n    value: 1,\n    metric: 'week',\n    id: 1,\n  },\n  day: {\n    value: 25,\n    metric: 'hours',\n    id: 2,\n  },\n};\n\nexport enum TimeInterval {\n  DAY = '1d',\n  HOUR = '1h',\n  MINUTES = '15m',\n}\n","import { Token } from '../models/token';\n\nexport const TOKEN_URL = (iconId: string) =>\n  `https://messari.io/asset-images/${iconId}/64.png?v=2`;\n\nexport const TOKENS: Token[] = [\n  {\n    symbol: 'ETH',\n    name: 'Ethereum',\n    iconId: '21c795f5-1bfd-40c3-858e-e9d7e820c6d0',\n  },\n  {\n    symbol: 'BTC',\n    name: 'Bitcoin',\n    iconId: '1e31218a-e44e-4285-820c-8282ee222035',\n  },\n];\n\nexport const TOKEN_SYMBOLS = TOKENS.map((d: Token) => d.symbol);\n\nexport const DELTA_COLORS = {\n  NEUTRAL: 'rgb(243, 244, 246)',\n  NEGATIVE: 'rgb(210, 43, 62)',\n  POSITIVE: 'rgb(0, 156, 63)',\n};\n\nexport const TRANSITION_DURATION = 150;\n","import * as d3 from 'd3';\nimport { TimeSeriesRow } from '../../models/time-series-row';\nimport { TRANSITION_DURATION } from '../../services/constants';\n\nexport const TimeSeriesChart = (svgEl: SVGSVGElement) => {\n  const svg = d3.select(svgEl);\n  const width = 680;\n  const height = 280;\n  const yPadding = 0.1;\n\n  const defs = svg.append('defs');\n  const linearGradient = defs\n    .append('linearGradient')\n    .attr('x1', 0)\n    .attr('x2', 0)\n    .attr('y1', 0)\n    .attr('y2', 1)\n    .attr('id', 'gradient');\n  linearGradient\n    .append('stop')\n    .attr('stop-color', 'var(--delta-color)')\n    .attr('stop-opacity', 0.2)\n    .attr('offset', '0%');\n  linearGradient\n    .append('stop')\n    .attr('stop-color', 'var(--delta-color)')\n    .attr('stop-opacity', 0)\n    .attr('offset', '100%');\n\n  const yScale = d3.scaleLinear().range([height, 0]);\n  const xScale = d3.scaleTime().range([0, width]);\n\n  const lineG = svg.append('g').classed('lineG', true);\n  const line = lineG\n    .append('path')\n    .classed('line', true)\n    .attr('stroke', 'var(--delta-color)')\n    .attr('stroke-width', 2)\n    .attr('fill', 'none');\n  const lineGen = d3\n    .line<TimeSeriesRow>()\n    .x((d: TimeSeriesRow) => xScale(new Date(d.timestamp)))\n    .y((d: TimeSeriesRow) => yScale(d.close));\n\n  const gradPoly = svg\n    .append('g')\n    .classed('gradPolyG', true)\n    .append('path')\n    .classed('gradPoly', true)\n    .attr('fill', 'url(#gradient)')\n    .attr('stroke', 'none');\n\n  return (data: TimeSeriesRow[]) => {\n    const { yExtent, xExtent } = getExtents(data, yPadding);\n    yScale.domain(yExtent);\n    xScale.domain(xExtent);\n\n    gradPoly\n      .datum(data)\n      .transition()\n      .duration(TRANSITION_DURATION)\n      .attr('opacity', 0)\n      .transition()\n      .delay(TRANSITION_DURATION)\n      .duration(0)\n      .attr('d', (d) => {\n        const path = lineGen(d);\n        return `${path} L ${width},${height} L 0,${height} Z`;\n      })\n      .transition()\n      .duration(TRANSITION_DURATION)\n      .attr('opacity', 1);\n\n    line\n      .datum(data)\n      .transition()\n      .duration(TRANSITION_DURATION)\n      .attr('opacity', 0)\n      .transition()\n      .delay(TRANSITION_DURATION)\n      .duration(0)\n      .attr('d', lineGen)\n      .transition()\n      .duration(TRANSITION_DURATION)\n      .attr('opacity', 1);\n  };\n};\n\nconst getExtents = (data: TimeSeriesRow[], yPadding: number) => {\n  const yExtent = d3.extent(data, (d: TimeSeriesRow): number => d.close) as [\n    number,\n    number,\n  ];\n  const paddedYExtent = yExtent.map((d: number, i: number) =>\n    i === 0 ? d * (1 - yPadding) : d * (1 + yPadding),\n  );\n\n  const timeStamps = data.map((d: TimeSeriesRow) => new Date(d.timestamp));\n  const xExtent = d3.extent(timeStamps) as [Date, Date];\n\n  return {\n    yExtent: paddedYExtent,\n    xExtent,\n  };\n};\n","import { TimeInterval, TimeRange, TimeRanges } from '../models/time-range';\n\nexport const rangeToInterval = (range: TimeRange): TimeInterval => {\n  switch (range.id) {\n    case TimeRanges.month.id:\n    default:\n      return TimeInterval.DAY;\n    case TimeRanges.week.id:\n      return TimeInterval.HOUR;\n    case TimeRanges.day.id:\n      return TimeInterval.MINUTES;\n  }\n};\n\nexport const displayPrice = (val: number) => {\n  const rounded = Math.round(val * 100) / 100;\n  return `$${rounded.toLocaleString()}`;\n};\n","import { FC } from 'react';\nimport styles from './token-stats.module.scss';\nimport { format } from 'd3';\nimport { Metrics } from '../../models/metrics';\n\nenum StatType {\n  RANK,\n  CURRENCY,\n  SUPPLY,\n}\n\ninterface Props {\n  metrics: Metrics;\n}\n\nexport const TokenStats: FC<Props> = ({ metrics }) => {\n  const renderStat = (value: number, type: StatType) => {\n    switch (type) {\n      case StatType.RANK:\n        return `#${value}`;\n      case StatType.CURRENCY:\n        return `$${format('.3s')(value)} USD`.replace('G', 'B');\n      case StatType.SUPPLY:\n        return `${Math.floor(value).toLocaleString()} ${metrics.symbol}`;\n    }\n  };\n\n  return (\n    <div className={styles.TokenStats}>\n      <div className={styles.title}>Key Metrics</div>\n\n      <div className={styles.stats}>\n        <div className={styles.statContainer}>\n          <div className={styles.label}>Market Cap Rank</div>\n          <div className={styles.stat}>\n            {renderStat(metrics.marketCapRank, StatType.RANK)}\n          </div>\n        </div>\n        <div className={styles.statContainer}>\n          <div className={styles.label}>Market Cap</div>\n          <div className={styles.stat}>\n            {renderStat(metrics.marketCap, StatType.CURRENCY)}\n          </div>\n        </div>\n        <div className={styles.statContainer}>\n          <div className={styles.label}>Circulating Supply</div>\n          <div className={styles.stat}>\n            {renderStat(metrics.circulatingSupply, StatType.SUPPLY)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useRef } from 'react';\nimport styles from './chart.module.scss';\nimport { TimeSeriesChart } from './timeSeriesChart';\nimport { TimeSeriesRow } from '../../models/time-series-row';\nimport { displayPrice } from '../../utils';\n\ninterface Props {\n  data: TimeSeriesRow[];\n}\n\nexport const Chart: FC<Props> = ({ data }) => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n  const timeSeriesChart = useRef<(data: TimeSeriesRow[]) => void>();\n\n  useEffect(() => {\n    if (svgRef.current !== null) {\n      timeSeriesChart.current = TimeSeriesChart(svgRef.current);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (timeSeriesChart.current !== undefined) {\n      timeSeriesChart.current(data);\n    }\n  }, [data]);\n\n  return (\n    <div className={styles.Chart}>\n      <svg ref={svgRef} viewBox=\"0 0 680 280\" />\n\n      <div className={styles.priceRange}>\n        {data.length > 0 ? (\n          <>\n            <span className={styles.price}>{displayPrice(data[0].close)}</span>\n            <span className={styles.price}>\n              {displayPrice(data[data.length - 1].close)}\n            </span>\n          </>\n        ) : (\n          <span>&nbsp;</span>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './token-bar.module.scss';\nimport Select from 'antd/lib/select';\nimport { TOKEN_URL, TOKENS } from '../../services/constants';\nimport { Token } from '../../models/token';\n\nconst { Option } = Select;\n\ninterface Props {\n  token: Token;\n  onTokenSelect: (token: Token) => void;\n}\n\nexport const TokenBar: FC<Props> = ({ onTokenSelect, token }) => {\n  const tokenSelected = (symbol: string) => {\n    const t = TOKENS.find((d: Token) => symbol === d.symbol);\n    if (t !== undefined) onTokenSelect(t);\n  };\n\n  return (\n    <div className={styles.TokenBar}>\n      <div className={styles.token}>\n        <span>{token.name}</span>\n        <span className={styles.symbol}>({token.symbol})</span>\n      </div>\n      <div className={styles.tokenSelector}>\n        <Select\n          onChange={tokenSelected}\n          value={token.symbol}\n          dropdownClassName={styles.selectDropdown}\n        >\n          {TOKENS.map((d) => (\n            <Option\n              value={d.symbol}\n              className={styles.selectOption}\n              key={d.symbol}\n            >\n              <img\n                className={styles.tokenSymbol}\n                src={TOKEN_URL(d.iconId)}\n                alt={`${d.symbol} logo`}\n              />\n              <span>{d.symbol}</span>\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n};\n","import { createSelector } from 'reselect';\nimport { RootState } from '../store';\n\nexport const selectTimeSeries = (state: RootState) => state.app.timeSeries;\nexport const selectMetrics = (state: RootState) => state.app.metrics;\nconst selectRange = (state: RootState) => state.app.timeRange;\nconst selectInterval = (state: RootState) => state.app.timeInterval;\nexport const selectTime = createSelector(\n  selectRange,\n  selectInterval,\n  (range, interval) => ({\n    range,\n    interval,\n  }),\n);\n","import { TimeSeriesRow, TokenDataPayload } from '../models/time-series-row';\nimport { Metrics, RawMetrics } from '../models/metrics';\nimport moment from 'moment';\n\nconst baseHeaders = {\n  'x-messari-api-key': process.env.REACT_APP_MESSARI_API ?? '',\n};\n\nconst TIME_SERIES_URL = (\n  symbol: string,\n  start: number,\n  end: number,\n  interval: string,\n) =>\n  `https://data.messari.io/api/v1/assets/${symbol}/metrics/price/time-series?start=${start}&end=${end}&interval=${interval}`;\nconst METRICS_URL = (symbol: string) =>\n  `https://data.messari.io/api/v1/assets/${symbol}/metrics`;\n\nconst fetchMetrics = async (symbol: string): Promise<Metrics> => {\n  const res = await fetch(METRICS_URL(symbol), {\n    method: 'GET',\n    headers: baseHeaders,\n  });\n\n  const { data } = await res.json();\n\n  return extractMetrics(data);\n};\n\nconst fetchTimeSeries = async ({\n  symbol,\n  interval,\n  range,\n}: TokenDataPayload): Promise<TimeSeriesRow[]> => {\n  const start = moment().subtract(range.value, range.metric).valueOf();\n  const end = moment().valueOf();\n  const res = await fetch(TIME_SERIES_URL(symbol, start, end, interval), {\n    method: 'GET',\n    headers: baseHeaders,\n  });\n\n  const { data } = await res.json();\n  const numbersToObjects = zipValues(data.parameters.columns);\n  return data.values.map(numbersToObjects);\n};\n\nconst zipValues =\n  (columns: string[]) =>\n  (values: number[]): TimeSeriesRow => {\n    return values.reduce(\n      (obj: Partial<TimeSeriesRow>, val: number, index: number) => ({\n        ...obj,\n        [columns[index]]: val,\n      }),\n      {},\n    ) as TimeSeriesRow;\n  };\n\nconst extractMetrics = (rawMetrics: RawMetrics): Metrics => ({\n  price: rawMetrics.market_data.price_usd,\n  priceATH: rawMetrics.all_time_high.price,\n  pricePeriodOpen: 0,\n  marketCapRank: rawMetrics.marketcap.rank,\n  marketCap: rawMetrics.marketcap.current_marketcap_usd,\n  circulatingSupply: rawMetrics.supply.circulating,\n  symbol: rawMetrics.symbol,\n});\n\nexport const DataService = {\n  fetchTimeSeries,\n  fetchMetrics,\n};\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { DataService } from '../../services/data';\nimport { TimeInterval, TimeRange } from '../../models/time-range';\nimport { TokenDataPayload } from '../../models/time-series-row';\n\nexport const fetchTokenData = createAsyncThunk(\n  'app/fetchTokenMetrics',\n  async (data: TokenDataPayload) => {\n    const [metrics, timeSeries] = await Promise.all([\n      DataService.fetchMetrics(data.symbol),\n      DataService.fetchTimeSeries(data),\n    ]);\n    return {\n      metrics,\n      timeSeries,\n    };\n  },\n);\n\nexport const setTime =\n  createAction<{ range: TimeRange; interval: TimeInterval }>('app/setTime');\n","import { FC } from 'react';\nimport styles from './time-range.module.scss';\nimport { TimeRange, TimeRanges } from '../../models/time-range';\n\ninterface Props {\n  timeRange: TimeRange;\n  rangeSelected: (range: TimeRange) => void;\n}\n\nexport const TimeRangeSelect: FC<Props> = ({ timeRange, rangeSelected }) => {\n  const selectRange = (range: TimeRange) => () => {\n    rangeSelected(range);\n  };\n  const isSelected = (id: number) =>\n    id === timeRange.id ? styles.selected : '';\n  return (\n    <div className={styles.TimeRange}>\n      <span\n        className={isSelected(TimeRanges.month.id)}\n        onClick={selectRange(TimeRanges.month)}\n      >\n        1M\n      </span>\n      <span\n        className={isSelected(TimeRanges.week.id)}\n        onClick={selectRange(TimeRanges.week)}\n      >\n        1W\n      </span>\n      <span\n        className={isSelected(TimeRanges.day.id)}\n        onClick={selectRange(TimeRanges.day)}\n      >\n        24H\n      </span>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './price-change.module.scss';\nimport { Metrics } from '../../models/metrics';\nimport { TimeRange } from '../../models/time-range';\nimport { displayPrice } from '../../utils';\n\ninterface Props {\n  metrics: Metrics;\n  timeRange: TimeRange;\n}\n\nexport const PriceChange: FC<Props> = ({ metrics, timeRange }) => {\n  const renderChange = () => {\n    const diff = metrics.price - metrics.pricePeriodOpen;\n    const diffAbs = Math.abs(Math.round(diff * 100) / 100);\n    const price = displayPrice(diffAbs);\n    const value = diff < 0 ? `-${price}` : `+${price}`;\n\n    const diffPercent = diff / metrics.pricePeriodOpen;\n    const rounded = Math.round(diffPercent * 10000) / 100;\n    const abs = Math.abs(rounded);\n    const val = abs.toLocaleString();\n    const percent = rounded < 0 ? `(-${val}%)` : `(+${val}%)`;\n    return {\n      value,\n      percent,\n    };\n  };\n\n  const renderTimeFrame = () => {\n    switch (timeRange.metric) {\n      case 'hours':\n        return `Past 24 Hours`;\n      case 'month':\n        return `Past 30 days`;\n      case 'week':\n        return `Past 7 days`;\n    }\n  };\n\n  const { value, percent } = renderChange();\n  return (\n    <div className={styles.PriceChange}>\n      <span className={styles.pChange}>\n        <span>\n          {value} {percent}\n        </span>\n      </span>\n      <span className={styles.changeTime}>{renderTimeFrame()}</span>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport styles from './token-price.module.scss';\nimport cx from 'classnames';\nimport { PriceChange } from '../price-change';\nimport { Metrics } from '../../models/metrics';\nimport { TimeRange } from '../../models/time-range';\nimport { displayPrice } from '../../utils';\n\ninterface Props {\n  metrics: Metrics;\n  timeRange: TimeRange;\n}\n\nexport const TokenPrice: FC<Props> = ({ metrics, timeRange }) => {\n  return (\n    <div\n      className={cx(styles.TokenPrice, {\n        [styles.visible]: metrics.price > 0,\n      })}\n    >\n      <div className={styles.pValue}>{displayPrice(metrics.price)}</div>\n      <PriceChange metrics={metrics} timeRange={timeRange} />\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styles from './App.module.scss';\nimport { Chart } from '../chart';\nimport { TokenBar } from '../token-bar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectMetrics,\n  selectTime,\n  selectTimeSeries,\n} from '../../state/app/selectors';\nimport { fetchTokenData, setTime } from '../../state/app/actions';\nimport {\n  DELTA_COLORS,\n  TOKENS,\n  TRANSITION_DURATION,\n} from '../../services/constants';\nimport { Token } from '../../models/token';\nimport { TokenStats } from '../token-stats';\nimport { TimeRangeSelect } from '../time-range';\nimport { TokenPrice } from '../token-price';\nimport { TimeRange } from '../../models/time-range';\nimport { rangeToInterval } from '../../utils';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const timeSeriesData = useSelector(selectTimeSeries);\n  const metrics = useSelector(selectMetrics);\n  const time = useSelector(selectTime);\n  const [token, setToken] = useState<Token>(TOKENS[0]);\n\n  const updateDeltaColor = useCallback(() => {\n    if (metrics.price === 0) return;\n\n    const deltaColor =\n      metrics.price < metrics.pricePeriodOpen\n        ? DELTA_COLORS.NEGATIVE\n        : DELTA_COLORS.POSITIVE;\n    setTimeout(() => {\n      document.documentElement.style.setProperty('--delta-color', deltaColor);\n    }, TRANSITION_DURATION);\n  }, [metrics]);\n\n  useEffect(() => {\n    updateDeltaColor();\n  }, [metrics, updateDeltaColor]);\n\n  useEffect(() => {\n    dispatch(\n      fetchTokenData({\n        symbol: token.symbol,\n        range: time.range,\n        interval: time.interval,\n      }),\n    );\n  }, [token, time]);\n\n  const tokenChanged = (t: Token) => {\n    setToken(t);\n  };\n\n  const timeRangeChanged = (range: TimeRange) => {\n    const interval = rangeToInterval(range);\n    dispatch(setTime({ range, interval }));\n  };\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.header}>\n        <span>Messari Dashboard</span>\n        <span>Ricky Roller | suzamaki.eth</span>\n      </div>\n\n      <div className={styles.contentContainer}>\n        <div className={styles.leftContainer} />\n        <div className={styles.content}>\n          <TokenBar token={token} onTokenSelect={tokenChanged} />\n          <div className={styles.priceTime}>\n            <TokenPrice metrics={metrics} timeRange={time.range} />\n            <TimeRangeSelect\n              timeRange={time.range}\n              rangeSelected={timeRangeChanged}\n            />\n          </div>\n          <Chart data={timeSeriesData} />\n          <TokenStats metrics={metrics} />\n        </div>\n\n        <div className={styles.rightContainer} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export enum AppStatus {\n  INIT,\n  LOADING,\n  READY,\n  ERROR,\n}\n","export interface RawMetrics {\n  market_data: {\n    price_usd: number;\n    ohlcv_last_24_hour: {\n      open: number;\n    };\n  };\n  marketcap: {\n    rank: number;\n    current_marketcap_usd: number;\n  };\n  supply: {\n    circulating: number;\n  };\n  all_time_high: {\n    price: number;\n  };\n  symbol: string;\n}\n\nexport interface Metrics {\n  price: number;\n  priceATH: number;\n  pricePeriodOpen: number;\n  marketCapRank: number;\n  marketCap: number;\n  circulatingSupply: number;\n  symbol: string;\n}\n\nexport const defaultMetrics: Metrics = {\n  price: 0,\n  priceATH: 0,\n  pricePeriodOpen: 0,\n  marketCapRank: 0,\n  marketCap: 0,\n  circulatingSupply: 0,\n  symbol: '',\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { fetchTokenData, setTime } from './actions';\nimport { AppStatus } from '../../models/app-status';\nimport { TimeSeriesRow } from '../../models/time-series-row';\nimport { defaultMetrics, Metrics } from '../../models/metrics';\nimport { TimeInterval, TimeRange, TimeRanges } from '../../models/time-range';\n\ninterface AppState {\n  timeSeries: TimeSeriesRow[];\n  metrics: Metrics;\n  timeRange: TimeRange;\n  timeInterval: TimeInterval;\n  status: AppStatus;\n}\n\nconst initialState: AppState = {\n  timeSeries: [],\n  metrics: defaultMetrics,\n  timeRange: TimeRanges.month,\n  timeInterval: TimeInterval.DAY,\n  status: AppStatus.INIT,\n};\n\nconst appReducer = createReducer(initialState, (app) => {\n  app.addCase(\n    fetchTokenData.pending,\n    (state: AppState): AppState => ({\n      ...state,\n      // metrics: defaultMetrics,\n      timeSeries: [],\n    }),\n  );\n\n  app.addCase(\n    fetchTokenData.fulfilled,\n    (state: AppState, { payload }): AppState => ({\n      ...state,\n      metrics: {\n        ...state.metrics,\n        ...payload.metrics,\n        pricePeriodOpen: payload.timeSeries[0]?.open ?? 0,\n      },\n      timeSeries: payload.timeSeries,\n    }),\n  );\n\n  app.addCase(\n    setTime,\n    (state: AppState, { payload }): AppState => ({\n      ...state,\n      timeRange: payload.range,\n      timeInterval: payload.interval,\n    }),\n  );\n});\n\nexport default appReducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport appReducer from './app';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.dark.css';\nimport './styles/index.scss';\nimport App from './components/app/App';\nimport { store } from './state/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nconsole.log(\n  '88b           d88                                                            88',\n);\nconsole.log(\n  '888b         d888                                                            \"\"',\n);\nconsole.log(`88'8b       d8'88`);\nconsole.log(\n  `88 '8b     d8' 88   ,adPPYba,  ,adPPYba,  ,adPPYba,  ,adPPYYba,  8b,dPPYba,  88`,\n);\nconsole.log(\n  `88  '8b   d8'  88  a8P_____88  I8[    \"\"  I8[    \"\"  \"\"     'Y8  88P'   \"Y8  88  `,\n);\nconsole.log(\n  `88   '8b d8'   88  8PP\"\"\"\"\"\"\"   '\"Y8ba,    '\"Y8ba,   ,adPPPPP88  88          88  `,\n);\nconsole.log(\n  `88    '888'    88  \"8b,   ,aa  aa    ]8I  aa    ]8I  88,    ,88  88          88  `,\n);\nconsole.log(\n  `88     '8'     88   '\"Ybbd8\"'  '\"YbbdP\"'  '\"YbbdP\"'  '\"8bbdP\"Y8  88          88  `,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"chart_Chart__1_ABd\",\"line\":\"chart_line__3ekVb\",\"priceRange\":\"chart_priceRange__2Ea-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TokenPrice\":\"token-price_TokenPrice__1X7GP\",\"visible\":\"token-price_visible__1E-aC\",\"pValue\":\"token-price_pValue__1k57P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deltaText\":\"price-change_deltaText__xTQSy\",\"PriceChange\":\"price-change_PriceChange__1FmO_\",\"pChange\":\"price-change_pChange__KU8Da\",\"changeTime\":\"price-change_changeTime__2UvkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRange\":\"time-range_TimeRange__1WaZr\",\"selected\":\"time-range_selected__7k3mY\"};"],"sourceRoot":""}